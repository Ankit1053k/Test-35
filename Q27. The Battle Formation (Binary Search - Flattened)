// Q27.java
// Matrix flattened binary search. Input: r c then r*c values (rows sorted, first of row > last of prev row), then target. Output: True/False
import java.util.*;
public class Q27 {
    public static void main(String[] args){
        Scanner s=new Scanner(System.in);
        int r=s.nextInt(), c=s.nextInt();
        int n=r*c;
        int[] a=new int[n];
        for(int i=0;i<n;i++) a[i]=s.nextInt();
        int target=s.nextInt();
        int l=0, h=n-1;
        boolean ok=false;
        while(l<=h){
            int m=(l+h)/2;
            if(a[m]==target){ ok=true; break;}
            else if(a[m]<target) l=m+1;
            else h=m-1;
        }
        System.out.println(ok);
    }
}
